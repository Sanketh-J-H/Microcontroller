/*
 * Timer3_InputCapture.c
 *
 *  Created on: Apr 19, 2023
 *      Author: sanketh
 */
#include "Timer3_InputCapture.h"

uint32_t timestamp;

void tim3_pa6_input_capture(void)
{
    // Enable clock access to GPIOA
    RCC->AHB1ENR |= GPIOAEN;
    // Set PA6 mode to alternate function
    GPIOA->MODER &= ~(3U << 2*6);
    GPIOA->MODER |= 2U << 2*6;
    // Set PA6 alternate function type to TIM3_CH1 (AF02)
    GPIOA->AFR[0] &= ~(0xFU << 4*6);
    GPIOA->AFR[0] |= 2U << 4*6;
    // Enable clock access to TIM3
    RCC->APB1ENR |= TIM3EN;
    // Set Prescaler
    TIM3->PSC = 16000 - 1; // 16 000 000 / 16 000
    // Set CH1 to input capture
    TIM3->CCMR1 |= 1U << 0;
    // Set CH1 to capture at rising edge
    TIM3->CCER |= CCER_CC1P | CCER_CC1E;
    // Enable TIM3
    TIM3->CR1 |= CR1_CEN;


    while (1)
    {
        // Wait until edge is captured
        while (!(TIM3->SR & TIM_SR_CC1IF))
        {
            // Do nothing
        }

        // Read captured value
        timestamp = TIM3->CCR1;

        // Clear CC1 interrupt flag
        TIM3->SR &= ~TIM_SR_CC1IF;

        // Do something with the captured timestamp
        // ...

        // Reset the timer value to 0
        TIM3->CNT = 0;
    }
}



